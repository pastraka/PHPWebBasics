CREATE DATABASE softuni;

CREATE TABLE minions(id int NOT NULL PRIMARY KEY, name varchar(15), age int(2), town_id int);
CREATE TABLE towns(id int NOT NULL PRIMARY KEY, name varchar(20),
CONSTRAINT fkid FOREIGN KEY (id) REFERENCES minions(id));

INSERT INTO towns VALUES(1, "Sofia");
INSERT INTO towns VALUES(2, "Plovdiv");
INSERT INTO towns VALUES(3, "Varna");
INSERT INTO minions VALUES(1, "Kevin", 22, 1);
INSERT INTO minions VALUES(2, "Bob", 15, 3);
INSERT INTO minions VALUES(3, "Steward", NULL, 2);

TRUNCATE TABLE minions;

DROP TABLE towns;
DROP TABLE minions;

CREATE TABLE people(
    id int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name varchar(200) NOT NULL,
    picture LONGBLOB,
    height decimal(4,2),
    weight decimal(4,2),
    gender char(1) NOT NUll,
    birthdate date NOT NUll,
    biography text);
INSERT INTO people(name, picture, height, weight, gender, birthdate, biography) VALUES('Kevin', LOAD_FILE('C:/Users/mihai/Desktop/man.jpg'), '1.80', '80', 'm', "1986-08-27", "lorem ipsum hakuna matata dano da stane nai-nakraq");
INSERT INTO people(name, picture, height, weight, gender, birthdate, biography) VALUES('Mitko', LOAD_FILE('C:/Users/mihai/Desktop/man.jpg'), '1.85', '85', 'm', "1976-09-20", "lorem ipsum hakuna matata dano da stane nai-nakraq");
INSERT INTO people(name, picture, height, weight, gender, birthdate, biography) VALUES('Pesho', LOAD_FILE('C:/Users/mihai/Desktop/man.jpg'), '1.70', '70', 'm', "1996-04-17", "lorem ipsum hakuna matata dano da stane nai-nakraq");
INSERT INTO people(name, picture, height, weight, gender, birthdate, biography) VALUES('Penka', LOAD_FILE('C:/Users/mihai/Desktop/man.jpg'), '1.60', '50', 'f', "1984-01-11", "lorem ipsum hakuna matata dano da stane nai-nakraq");
INSERT INTO people(name, picture, height, weight, gender, birthdate, biography) VALUES('Gichka', LOAD_FILE('C:/Users/mihai/Desktop/man.jpg'), '1.90', '70', 'f', "2000-10-12", "lorem ipsum hakuna matata dano da stane nai-nakraq");

CREATE TABLE users(
	id BIGINT UNIQUE AUTO_INCREMENT,
	username VARCHAR(30) UNIQUE  NOT NULL,
	password  VARCHAR(26) NOT NULL,
	profile_picture  BLOB,
	last_login_time DATE,
	is_deleted BOOL
);
ALTER TABLE users
ADD CONSTRAINT pk_users PRIMARY KEY(id);
INSERT INTO users(username, password, last_login_time, is_deleted)
VALUES ('Gogo', 'spojpe',  '2017-05-15', TRUE),
('Bobo','epgojro', '2017-08-05', FALSE),
('Ani',  'rpker', '2017-04-25', TRUE),
('Sasho',  'rgpjrpe', '2017-05-06', TRUE),
('Gery', 'pkptkh','2017-01-11', FALSE);

ALTER TABLE users
DROP PRIMARY KEY,
ADD CONSTRAINT pk_users PRIMARY KEY (`id`, `username`);

SELECT * FROM departments
ORDER BY department_id ASC

SELECT name
FROM departments
ORDER BY department_id ASC

SELECT first_name, last_name, salary
FROM employees
ORDER BY employee_id ASC

SELECT first_name, middle_name, last_name
FROM employees
ORDER BY employee_id ASC

SELECT CONCAT(first_name, '.', last_name, '@softuni.bg') AS full_name_address
FROM employees

SELECT DISTINCT(salary)
FROM employees
ORDER BY salary

SELECT *
FROM employees
WHERE job_title = "Sales Representative"
ORDER BY employee_id

SELECT first_name, last_name, job_title
FROM employees
WHERE salary BETWEEN "20000" AND "30000"
ORDER BY employee_id

SELECT CONCAT(first_name, ' ', middle_name, ' ', last_name) AS full_name
FROM employees
WHERE salary = "25000" OR salary = "14000" OR salary = "12500" OR salary = "23600"
!!!another solution => WHERE salary IN(25000, 14000, 12500, 23600)!!!

SELECT first_name, last_name
FROM employees
WHERE manager_id IS NULL

SELECT first_name, last_name, salary
FROM employees
WHERE salary > "50000"
ORDER BY salary DESC

SELECT first_name, last_name
FROM employees
ORDER BY salary DESC
LIMIT 5

SELECT first_name, last_name
FROM employees
WHERE department_id != 4

SELECT *
FROM employees
ORDER BY salary DESC, first_name ASC, last_name DESC, middle_name ASC, employee_id

SELECT DISTINCT(job_title)
FROM employees
ORDER BY job_title ASC

SELECT *
FROM projects
ORDER BY start_date, name
LIMIT 10

SELECT first_name, last_name, hire_date
FROM employees
ORDER BY hire_date DESC 
LIMIT 7

UPDATE employees
SET salary = salary * 1.12
WHERE department_id IN(1, 2, 4, 11);
SELECT salary FROM employees;

SELECT peak_name
FROM peaks
ORDER BY peak_name

SELECT country_name, population
FROM countries
WHERE continent_code = "EU"
ORDER BY population DESC, country_name
LIMIT 30

SELECT country_name, country_code, currency_code,
IF(currency_code = "EUR", "Euro", "Not Euro") AS currency
FROM countries
ORDER BY country_name